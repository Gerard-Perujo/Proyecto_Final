CREATE DATABASE Proyecto_Final;
USE Proyecto_Final;

CREATE TABLE CATEGORIAS
(ID_CATEGORIA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(45) NOT NULL,
DESCRIPCION VARCHAR(200)
);

INSERT INTO `CATEGORIAS` (`ID_CATEGORIA`,`NOMBRE`,`DESCRIPCION`) values (1, 'Verduras', 'Todo tipo de verduras y hortalizas');
INSERT INTO `CATEGORIAS` (`ID_CATEGORIA`,`NOMBRE`,`DESCRIPCION`) values (2, 'Fruta', 'Tipos de fruta de todo el mundo');
INSERT INTO `CATEGORIAS` (`ID_CATEGORIA`,`NOMBRE`,`DESCRIPCION`) values (3, 'Productos Varios', 'Productos varios de Km0');

CREATE TABLE PRODUCTOS_PROVEEDOR
(ID_PRODUCTO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(50) NOT NULL,
DESCRIPCION VARCHAR(200),
IMAGEN VARCHAR(200),
ESTADO VARCHAR(20), -- ESTE ESTADO "A" , "D",  ES PARA DISCRIMINAR DE LOS PRODUCTOS QUE TENEMOS EN LA TIENDA -- 
CANTIDAD_MAXIMA INT, -- CANTIDAD MAXIMA DE CADA PRODUCTO QUE HAY EN LA TIENDA --
PRECIO_UNITARIO DOUBLE(9,2)
);

CREATE TABLE CUENTA_PROVEEDOR
(ID_CUENTA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(100),
NUMERO_CUENTA INT,
SALDO DOUBLE(9,2)
);

CREATE TABLE PROVEEDOR 
(ID_PROVEEDOR INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(100),
POBLACION VARCHAR(100),
CALLE VARCHAR(100),
NUMERO INT,
CP INT,
EMAIL VARCHAR(100),
FECHA_ALTA DATE,
ID_CUENTA INT,
ID_PRODUCTO INT,
FOREIGN KEY (ID_CUENTA) REFERENCES CUENTA_PROVEEDOR(ID_CUENTA),
FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTOS_PROVEEDOR(ID_PRODUCTO)
);


CREATE TABLE PRODUCTOS
(ID_PRODUCTO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(50) NOT NULL,
DESCRIPCION VARCHAR(200),
IMAGEN VARCHAR(200),
ESTADO VARCHAR(20), -- ESTE ESTADO "A" , "D",  ES PARA DISCRIMINAR DE LOS PRODUCTOS QUE TENEMOS EN LA TIENDA -- 
VALORACION VARCHAR(200),
CANTIDAD_MAXIMA INT, -- CANTIDAD MAXIMA DE CADA PRODUCTO QUE HAY EN LA TIENDA --
PRECIO_UNITARIO DOUBLE(9,2),
ID_CATEGORIA INT NOT NULL,
ID_PROVEEDOR INT NOT NULL,
FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIAS(ID_CATEGORIA),
FOREIGN KEY(ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR)
);

CREATE TABLE CUENTA_USUARIO
(ID_CUENTA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(100),
APELLIDO VARCHAR(100),
NUMERO_TARGETA INT,
SALDO DOUBLE(9,2)
);

CREATE TABLE USUARIOS
(
USERNAME VARCHAR(45) NOT NULL PRIMARY KEY,
PASSWORD VARCHAR(200) NOT NULL,
NOMBRE VARCHAR(50),
PRIMER_APELLIDO VARCHAR(50),
SEGUNDO_APELLIDO VARCHAR(50),
POBLACION VARCHAR(100),
CALLE VARCHAR(100),
NUMERO VARCHAR(100),
CP INT,
EMAIL VARCHAR(100),
FOTO VARCHAR(200),
ESTADO VARCHAR(50) NOT NULL DEFAULT 'a', -- ESTE ESTADO "A" , "D", PARA CONTROLAR LOS USUARIOS QUE TENEMOS ACTIVOS--
FECHA_REGISTRO DATE,
ID_CUENTA INT,
FOREIGN KEY (ID_CUENTA) REFERENCES CUENTA_USUARIO(ID_CUENTA)
);

INSERT INTO `USUARIOS` (`USERNAME`,`PASSWORD`,`NOMBRE`,`PRIMER_APELLIDO`,`SEGUNDO_APELLIDO`,`POBLACION`,`CALLE`,`NUMERO`,`CP`,`EMAIL`,`FOTO`,`ESTADO`,`FECHA_REGISTRO`) VALUES ('Geri','{noop}geri','Gerard','Perujo','Buxeda','Puigcerda','Mont-cerda','nº1 bajo 1',17520,'ger.pe85@gmail.com','null','a','2024-03-14');
INSERT INTO `USUARIOS` (`USERNAME`,`PASSWORD`,`NOMBRE`,`PRIMER_APELLIDO`,`SEGUNDO_APELLIDO`,`POBLACION`,`CALLE`,`NUMERO`,`CP`,`EMAIL`,`FOTO`,`ESTADO`,`FECHA_REGISTRO`) VALUES ('Mari','{noop}mari','Maria','Isabel','Martín','Madrid','Avenida FelipeVI','nº300 segundo 3',28001,'mar.Isab@gmail.com','null','a','2024-03-14');
INSERT INTO `USUARIOS` (`USERNAME`,`PASSWORD`,`NOMBRE`,`PRIMER_APELLIDO`,`SEGUNDO_APELLIDO`,`POBLACION`,`CALLE`,`NUMERO`,`CP`,`EMAIL`,`FOTO`,`ESTADO`,`FECHA_REGISTRO`) VALUES ('Noeli','{noop}noeli','Noelia','Villahermosa','Garcia','Ciudad Real','Avenida España','nº200 quarto 3',13001,'noe.villa@gmail.com','null','a','2024-03-14');


CREATE TABLE COMPRAS
(ID_COMPRA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
ID_PRODUCTO INT NOT NULL,
USERNAME VARCHAR(45) NOT NULL,
PRECIO_PRODUCTO DOUBLE(9,2), -- PRECIO UNITARIO MAS LA CANTIDAD QUE DESEAMOS COMPRAR --
PRECIO_TOTAL DOUBLE(9,2), -- PRECIO TOTAL DE TODOS LOS PRODUCTOS QUE ESTEN ACTIVOS (PRODUCTOS POR COMPRAR) --
CANTIDAD INT, -- CANTIDAD DE CADA PRODUCTO QUE COMPRAMOS --
ESTADO VARCHAR(100), -- ESTE ESTADO "A" , "D",  ES PARA DISCRIMINAR DE LOS ELEMENTOS COMPRADOS A LOS QUE FALTAN POR COMPRAR--
FOREIGN KEY(USERNAME) REFERENCES USUARIOS(USERNAME),
FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO)
);

CREATE TABLE PEDIDOS
(ID_PEDIDO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
USERNAME VARCHAR(45),
FECHA_PEDIDO DATE,
FOREIGN KEY(USERNAME) REFERENCES USUARIOS(USERNAME)
);

CREATE TABLE CUENTA_EMPRESA
(ID_CUENTA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(100),
NUMERO_CUENTA INT,
SALDO DOUBLE(9,2)
);

CREATE TABLE EMPRESA
(ID_EMPRESA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(100),
POBLACION VARCHAR(100),
CALLE VARCHAR(100),
NUMERO INT,
CP INT,
EMAIL VARCHAR(100),
FECHA_ALTA DATE,
ID_CUENTA INT,
FOREIGN KEY(ID_CUENTA) REFERENCES CUENTA_EMPRESA(ID_CUENTA)
);

CREATE TABLE COMPRAS_PEDIDOS
(ID_COMPRAS_PEDIDOS INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
ID_PEDIDO INT NOT NULL,
ID_COMPRA INT NOT NULL,
ID_CUENTA INT NOT NULL,
PRECIO_TOTAL DOUBLE(9,2),
FOREIGN KEY(ID_PEDIDO) REFERENCES PEDIDOS(ID_PEDIDO),
FOREIGN KEY (ID_COMPRA) REFERENCES COMPRAS(ID_COMPRA),
FOREIGN KEY (ID_CUENTA) REFERENCES CUENTA_EMPRESA(ID_CUENTA)
);


-- TABLAS PARA LOGIN, LOGOUT y REGISTRO o  SPRING SECURITY 

CREATE TABLE PERFILES
(ID_PERFIL INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(45) NOT NULL
);
INSERT INTO `PERFILES` (`ID_PERFIL`,`NOMBRE`) VALUES (1,'ROLE_ADMINISTRADOR');
INSERT INTO `PERFILES` (`ID_PERFIL`,`NOMBRE`) VALUES (2,'ROLE_GESTOR');
INSERT INTO `PERFILES` (`ID_PERFIL`,`NOMBRE`) VALUES (3,'ROLE_CLIENTE');

CREATE TABLE USUARIO_PERFILES
(USERNAME VARCHAR(45) NOT NULL,
ID_PERFIL INT NOT NULL,
PRIMARY KEY(USERNAME, ID_PERFIL),
FOREIGN KEY(USERNAME) REFERENCES USUARIOS(USERNAME),
FOREIGN KEY(ID_PERFIL) REFERENCES PERFILES(ID_PERFIL)
);

INSERT INTO `USUARIO_PERFILES` (`USERNAME`,`ID_PERFIL`) VALUES ('Geri',1);
INSERT INTO `USUARIO_PERFILES` (`USERNAME`,`ID_PERFIL`) VALUES ('Mari',1);
INSERT INTO `USUARIO_PERFILES` (`USERNAME`,`ID_PERFIL`) VALUES ('Noeli',1);




